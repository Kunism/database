==3598== Memcheck, a memory error detector
==3598== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3598== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3598== Command: ./rmtest_02
==3598== Parent PID: 2653
==3598== 
==3598== error calling PR_SET_PTRACER, vgdb might block
==3598== Syscall param writev(vector[...]) points to uninitialised byte(s)
==3598==    at 0x58916B4: writev (writev.c:26)
==3598==    by 0x4EEFF9F: std::__basic_file<char>::xsputn_2(char const*, long, char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==3598==    by 0x4F2B78E: std::basic_filebuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==3598==    by 0x4F4F8B1: std::ostream::write(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==3598==    by 0x114E8D: HiddenPage::writeHiddenPage(std::basic_fstream<char, std::char_traits<char> >&) (pfm.cc:164)
==3598==    by 0x114D0C: FileHandle::closeFile() (pfm.cc:130)
==3598==    by 0x111480: RelationManager::getAttributes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<Attribute, std::allocator<Attribute> >&) (rm.cc:261)
==3598==    by 0x10C852: TEST_RM_2(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, float, int) (rmtest_02.cc:18)
==3598==    by 0x10CBEC: main (rmtest_02.cc:60)
==3598==  Address 0x5c69080 is 16 bytes inside a block of size 4,096 alloc'd
==3598==    at 0x4C3089F: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3598==    by 0x114E3D: HiddenPage::writeHiddenPage(std::basic_fstream<char, std::char_traits<char> >&) (pfm.cc:161)
==3598==    by 0x114D0C: FileHandle::closeFile() (pfm.cc:130)
==3598==    by 0x111480: RelationManager::getAttributes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<Attribute, std::allocator<Attribute> >&) (rm.cc:261)
==3598==    by 0x10C852: TEST_RM_2(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, float, int) (rmtest_02.cc:18)
==3598==    by 0x10CBEC: main (rmtest_02.cc:60)
==3598== 
==3598== 
==3598== HEAP SUMMARY:
==3598==     in use at exit: 96 bytes in 9 blocks
==3598==   total heap usage: 2,370 allocs, 2,361 frees, 3,890,979 bytes allocated
==3598== 
==3598== LEAK SUMMARY:
==3598==    definitely lost: 96 bytes in 9 blocks
==3598==    indirectly lost: 0 bytes in 0 blocks
==3598==      possibly lost: 0 bytes in 0 blocks
==3598==    still reachable: 0 bytes in 0 blocks
==3598==         suppressed: 0 bytes in 0 blocks
==3598== Rerun with --leak-check=full to see details of leaked memory
==3598== 
==3598== For counts of detected and suppressed errors, rerun with: -v
==3598== Use --track-origins=yes to see where uninitialised values come from
==3598== ERROR SUMMARY: 11 errors from 1 contexts (suppressed: 0 from 0)
