==3590== Memcheck, a memory error detector
==3590== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3590== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3590== Command: ./rmtest_01
==3590== Parent PID: 2653
==3590== 
==3590== error calling PR_SET_PTRACER, vgdb might block
==3590== Syscall param writev(vector[...]) points to uninitialised byte(s)
==3590==    at 0x58916B4: writev (writev.c:26)
==3590==    by 0x4EEFF9F: std::__basic_file<char>::xsputn_2(char const*, long, char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==3590==    by 0x4F2B78E: std::basic_filebuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==3590==    by 0x4F4F8B1: std::ostream::write(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==3590==    by 0x114F71: HiddenPage::writeHiddenPage(std::basic_fstream<char, std::char_traits<char> >&) (pfm.cc:164)
==3590==    by 0x114DF0: FileHandle::closeFile() (pfm.cc:130)
==3590==    by 0x111564: RelationManager::getAttributes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<Attribute, std::allocator<Attribute> >&) (rm.cc:261)
==3590==    by 0x10C8B1: TEST_RM_1(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, float, int) (rmtest_01.cc:20)
==3590==    by 0x10CCD1: main (rmtest_01.cc:73)
==3590==  Address 0x5c6b3d0 is 16 bytes inside a block of size 4,096 alloc'd
==3590==    at 0x4C3089F: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3590==    by 0x114F21: HiddenPage::writeHiddenPage(std::basic_fstream<char, std::char_traits<char> >&) (pfm.cc:161)
==3590==    by 0x114DF0: FileHandle::closeFile() (pfm.cc:130)
==3590==    by 0x111564: RelationManager::getAttributes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<Attribute, std::allocator<Attribute> >&) (rm.cc:261)
==3590==    by 0x10C8B1: TEST_RM_1(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, float, int) (rmtest_01.cc:20)
==3590==    by 0x10CCD1: main (rmtest_01.cc:73)
==3590== 
==3590== 
==3590== HEAP SUMMARY:
==3590==     in use at exit: 76 bytes in 7 blocks
==3590==   total heap usage: 1,785 allocs, 1,778 frees, 2,940,460 bytes allocated
==3590== 
==3590== LEAK SUMMARY:
==3590==    definitely lost: 76 bytes in 7 blocks
==3590==    indirectly lost: 0 bytes in 0 blocks
==3590==      possibly lost: 0 bytes in 0 blocks
==3590==    still reachable: 0 bytes in 0 blocks
==3590==         suppressed: 0 bytes in 0 blocks
==3590== Rerun with --leak-check=full to see details of leaked memory
==3590== 
==3590== For counts of detected and suppressed errors, rerun with: -v
==3590== Use --track-origins=yes to see where uninitialised values come from
==3590== ERROR SUMMARY: 12 errors from 1 contexts (suppressed: 0 from 0)
